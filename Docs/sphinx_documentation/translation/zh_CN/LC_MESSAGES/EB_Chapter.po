# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-20123, AMReX Team
# This file is distributed under the same license as the amrex package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: amrex 23.00-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-02 14:37+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/EB_Chapter.rst:6 732fb411c5654e31a82b859775361539
msgid "Embedded Boundaries"
msgstr ""

#: ../../source/EB_Chapter.rst:8 da0f9a68a47d4d5bbe56154ea644f687
msgid ""
"For computations with complex geometries, AMReX provides data structures "
"and algorithms to employ an embedded boundary (EB) approach to PDE "
"discretizations. In this approach, the underlying computational mesh is "
"uniform and block-structured, but the boundary of the irregular-shaped "
"computational domain conceptually cuts through this mesh. Each cell in "
"the mesh becomes labeled as regular, cut or covered, and the finite-"
"volume based discretization methods traditionally used in AMReX "
"applications can be modified to incorporate these cell shapes. See "
":numref:`fig::ebexample` for an illustration."
msgstr ""

#: ../../source/EB_Chapter.rst:26 0046c104cb6d45b3ad8c091ce895ed8f
msgid ""
": In the embedded boundary approach to discretizing PDEs, the (uniform) "
"rectangular mesh is cut by the irregular shape of the computational "
"domain. The cells in the mesh are label as regular, cut or covered."
msgstr ""

#: ../../source/EB_Chapter.rst:34 e79f828c78184d46a16e277d9ab824ec
msgid ""
"Note that in a completely general implementation of the EB approach, "
"there would be no restrictions on the shape or complexity of the EB "
"surface.  With this generality comes the possibility that the process of "
"\"cutting\" the cells results in a single :math:`(i,j,k)` cell being "
"broken into multiple cell fragments.  The current release of AMReX does "
"not support multi-valued cells, thus there is a practical restriction on "
"the complexity of domains (and numerical algorithms) supported."
msgstr ""

#: ../../source/EB_Chapter.rst:42 3380fb740c33414198be5dc5e20aeed8
msgid ""
"AMReX's relatively simple grid generation technique allows computational "
"meshes for rather complex geometries to be generated quickly and "
"robustly. However, the technique can produce arbitrarily small cut cells "
"in the domain. In practice such small cells can have significant impact "
"on the robustness and stability of traditional finite volume methods. The"
" redistribution_ section in AMReX-Hydro's documentation overviews the "
"finite volume discretization in an embedded boundary cell and a class of "
"approaches to deal with this \"small cell\" problem in a robust and "
"efficient way."
msgstr ""

#: ../../source/EB_Chapter.rst:54 c6ee1d48a9c24a0a94f7d13a19d5099b
msgid ""
"This chapter discusses the EB tools, data structures and algorithms "
"currently supported by AMReX to enable the construction of "
"discretizations of conservation law systems. The discussion will focus on"
" general requirements associated with building fluxes and taking "
"divergences of them to advance such systems. We also give examples of how"
" to initialize the geometry data structures and access them to build the "
"numerical difference operators.  Finally we present EB support of linear "
"solvers."
msgstr ""

